.image-container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    /* Set the height of the container to match the viewport height */
}

.pc-image {
    max-width: 100%;
    max-height: 100%;
}

/* top: 30.5%; */
/* Position the square at the middle vertically */
/* left: 50%; */
/* Position the square at the middle horizontally */
/* transform: translate(-50%, -50%); */
/* Center the square using translate */
/* width: 31%; */
/* Adjust the width of the square as per your requirements */
/* height: 23.7%; */

@import 'https://fonts.googleapis.com/css?family=Inconsolata';

.square {
    position: absolute;
    /* Customize the background color of the square as per your requirements */
    z-index: 0;
    /* Set the z-index to a higher value (e.g., 2) to ensure the square appears on top of other elements */
    background-color: #000000;
    background-image: radial-gradient(#11581E, #041607), url("https://media.giphy.com/media/oEI9uBYSzLpBK/giphy.gif");
    background-repeat: no-repeat;
    background-size: cover;
    font-family: 'Inconsolata', Helvetica, sans-serif;
    font-size: 1.5rem;
    color: rgba(128, 255, 128, 0.8);
    text-shadow:
        0 0 1ex rgba(51, 255, 51, 1),
        0 0 2px rgba(255, 255, 255, 0.8);
}

.noise {
    pointer-events: none;
    position: absolute;
    background-image: url("https://media.giphy.com/media/oEI9uBYSzLpBK/giphy.gif");
    background-repeat: no-repeat;
    background-size: cover;
    z-index: 1;
    opacity: 0.04;
}


.terminal {
    box-sizing: inherit;
    position: absolute;
    padding: 4rem;
    text-transform: uppercase;
}

.square {
    top: 30.5%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 31%;
    height: 23.7%;
}

.noise {
    top: 30.5%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 31%;
    height: 23.7%;
}

.terminal {
    top: 30.5%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 31%;
    height: 23.7%;
}

.overlay {
    /* Set the top, left, width, and height properties to match the dimensions of the container */
    top: 30.5%;
    left: 50%;
    width: 31%;
    height: 23.7%;

    /* Center the overlay using transform */
    transform: translate(-50%, -50%);

    /* Adjust other properties as desired */
    pointer-events: none;
    position: absolute;
    background: repeating-linear-gradient(180deg, rgba(0, 0, 0, 0) 0, rgba(0, 0, 0, 0.3) 50%, rgba(0, 0, 0, 0) 100%);
    background-size: auto 6px;
    z-index: 1;
}

.overlay::before {
    /* Set the top, left, width, and height properties to match the dimensions of the container */
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;

    /* Center the pseudo-element using transform */
    transform: translate(-50%, -50%);

    /* Adjust other properties as desired */
    content: "";
    pointer-events: none;
    position: absolute;
    display: block;
    background-image: linear-gradient(0deg, transparent 0%, rgba(32, 128, 32, 0.2) 2%, rgba(32, 128, 32, 0.8) 3%, rgba(32, 128, 32, 0.2) 3%, transparent 100%);
    background-repeat: no-repeat;
    animation: scan 7.5s linear 0s infinite;
}

@keyframes scan {
    0% {
        background-position: 0 -100vh;
    }

    35%,
    100% {
        background-position: 0 100vh;
    }
}

.terminal-output {
    white-space: pre-wrap;
    overflow-y: scroll;
    max-height: 85%;
    padding: 0 1vw;
    text-align: left;
    padding-left: 4.5rem;
}

.console-input {
    margin-top: 0.9rem;
    text-align: left;
    width: 100%;
    padding: 0 1vw;
    position: absolute;
    left: 0;
    background-color: transparent;
    border: none;
    outline: none;
    font-family: 'Inconsolata', Helvetica, sans-serif;
    font-size: 1.5rem;
    color: rgba(128, 255, 128, 0.8);
    text-shadow:
        0 0 1ex rgba(51, 255, 51, 1),
        0 0 2px rgba(255, 255, 255, 0.8);
    padding-left: 6.5rem;
}

.input-container {
    padding: 0 10rem;
    font-size: 3rem;
    text-align: left;
    padding-left: 4rem;
}

textarea {
    resize: none;
}